#!/usr/bin/python

import sfml as sf
import socket
import sys

def music():
#play music
    music = sf.Music.from_file("ressources/contact.wav")
    music.play()

def gereKey():
    if sf.Keyboard.is_key_pressed(sf.Keyboard.LEFT):
        print "gauche"
    elif sf.Keyboard.is_key_pressed(sf.Keyboard.RIGHT):
        print "droite"
    elif sf.Keyboard.is_key_pressed(sf.Keyboard.UP):
        print "haut"
    elif sf.Keyboard.is_key_pressed(sf.Keyboard.DOWN):
        print "bas"

def     mainWindow():
    ball_radius = 50
    paddle_size = sf.Vector2(100, 100)
    #texture = sf.Texture.from_file("ressources/jolie.jpg")
    #sprite = sf.Sprite(texture)
    font = sf.Font.from_file("ressources/Sansation_Bold.ttf")
    instructions = sf.Text("C'est le Zappy Pipi de chameau en culotte courte",font, 20)
    instructions.position = (100, 50)
    instructions.color = sf.Color(80, 80, 80)
    rectangle = sf.RectangleShape()
    rectangle.size = paddle_size - (3, 3)
    rectangle.outline_thickness = 1
    rectangle.outline_color = sf.Color.BLACK
    rectangle.fill_color = sf.Color.GREEN
    rectangle.move(sf.Vector2(300,150))
    ball = sf.CircleShape()
    ball.radius = ball_radius - 3
    ball.outline_thickness = 10
    ball.outline_color = sf.Color.RED
    ball.fill_color = sf.Color.WHITE
    ball.move(sf.Vector2(150,150))
    print "ball -- x --> %f" % ball.position.x
    print "ball -- y --> %f" % ball.position.y

    window = sf.RenderWindow(sf.VideoMode(640, 480), "Client")
    # start the game loop
    while window.is_open:
	for event in window.events:
            # close window: exit
	    if type(event) is sf.CloseEvent:
		window.close()
	    if type(event) is sf.KeyEvent and event.code is sf.Keyboard.ESCAPE:
		window.close()
	    gereKey()
	window.clear() # clear screen
	#window.draw(sprite) # draw the sprite
        window.draw(ball)
        window.draw(rectangle)
        window.draw(instructions)
	window.display() # update the window

def init_connect():
    HOST = "localhost"
    if (len(sys.argv) == 5):
        i = 1
        while i < len(sys.argv):
            if sys.argv[i] == "-n":
                TEAM = sys.argv[i + 1]
	    elif sys.argv[i] == "-p":
                PORT = int(sys.argv[i + 1])
            i = i + 2
 	print "Nom d'equipe: " + TEAM
	print "Hote: " + HOST
	print "Port: " + str(PORT)
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	try:
	    sock.connect((HOST, PORT))
	except socket.error:
	    exit()
	print "Connexion etablie avec le serveur"
	query = "Yoooo C'est le Rap du Ratz !!"
	sock.send(query)
    elif (len(sys.argv) == 7):
	i = 1
        while i < len(sys.argv):
            if sys.argv[i] == "-n":
                TEAM = sys.argv[i + 1]
            elif sys.argv[i] == "-h":
                HOST = sys.argv[i + 1]
	    elif sys.argv[i] == "-p":
                PORT = int(sys.argv[i + 1])
            i = i + 2
	print "Nom d'equipe: " + TEAM
	print "Hote: " + HOST
	print "Port: " + str(PORT)
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	try:
	    sock.connect((HOST, PORT))
	except socket.error:
	    exit()
	print "Connexion etablie avec le serveur"
	query = "Yoooo C'est le Rap du Ratz !!"
	sock.send(query)
    else:
	print "USAGE: ./Client [-h hote] [-n equipe] [-p port]"
	exit()

def main():
    try:
	#init_connect()
	music()
	mainWindow()
	draw()
    except IOError: exit(1)
main()
